apiVersion: apps/v1
kind: Deployment
metadata:
  name: ordering-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ordering-api
  template:
    metadata:
      labels:
        app: ordering-api
    spec:
      containers:
      - name: ordering-api
        image: sharadit/orderingapi:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"
        - name: ConnectionStrings__Database
          # - name: ASPNETCORE_HTTP_PORTS
          #   value: "/https/aspnetapp.pfx"
          # - name: ASPNETCORE_Kestrel__Certificates__Default__Path
          #   value: "Sharad@1"
          # - name: ASPNETCORE_Kestrel__Certificates__Default__Password
          #   value: "8081"
          # - name: ASPNETCORE_HTTPS_PORTS
          #   value: "8080"
          value: "Server=orderdb;Database=OrderDb;User Id=sa;Password=SwN12345678;Encrypt=False;TrustServerCertificate=True"
        - name: MessageBroker__Host
          value: "amqp://ecommerce-mq:5672"
        - name: MessageBroker__UserName
          value: "guest"
        - name: MessageBroker__Password
          value: "guest"
        - name: FeatureManagement__OrderFullfilment
          value: "false"
      restartPolicy: Always
# apiVersion: v1
# kind: Service
---
# metadata:
#   name: ordering-api
# spec:
#   selector:
#     app: ordering-api
#   ports:
#   - protocol: TCP
#     port: 7003
#     targetPort: 8080
#   type: ClusterIP
apiVersion: v1
kind: Service
metadata:
  name: ordering-api
spec:
  type: NodePort
  selector:
    app: ordering-api
  ports:
  - port: 8004
    targetPort: 8080
    nodePort: 31004
